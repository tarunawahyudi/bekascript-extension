{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "BekaScript",
  "scopeName": "source.bekascript",
  "patterns": [
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#variables"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.bekascript",
          "match": "\\b(kalo|yakali|kalo_kaga|ulangin|dari|ampe|pokonya|balik)\\b"
        },
        {
          "name": "keyword.declaration.bekascript",
          "match": "\\b(punya|anu|guna)\\b"
        },
        {
          "name": "keyword.other.bekascript",
          "match": "\\b(nongol)\\b"
        },
        {
          "name": "constant.language.bekascript",
          "match": "\\b(true|false|null|undefined)\\b"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.bekascript",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape.bekascript",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single.bekascript",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape.bekascript",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash.bekascript",
          "begin": "//",
          "end": "$"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.bekascript",
          "match": "\\b\\d+(\\.\\d+)?\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.assignment.bekascript",
          "match": "="
        },
        {
          "name": "keyword.operator.comparison.bekascript",
          "match": "(==|!=|<=|>=|<|>)"
        },
        {
          "name": "keyword.operator.logical.bekascript",
          "match": "(&&|\\|\\||!)"
        },
        {
          "name": "keyword.operator.arithmetic.bekascript",
          "match": "(\\+\\+|--|\\+|\\-|\\*|\\/|%)"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "entity.name.function.bekascript",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*(?=\\s*\\()"
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "variable.other.bekascript",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        }
      ]
    }
  }
}
